// Code generated by MockGen. DO NOT EDIT.
// Source: dynamodb/IDynamodb.go

// Package mock_dynamodb is a generated GoMock package.
package mock_dynamodb

import (
reflect "reflect"

gomock "github.com/golang/mock/gomock"
models "github.com/tavomartinez88/slack-bot/lambda/slack-bot-release-aws-lambda/models"
)

// MockIDynamoSlackBotDb is a mock of IDynamoSlackBotDb interface.
type MockIDynamoSlackBotDb struct {
	ctrl     *gomock.Controller
	recorder *MockIDynamoSlackBotDbMockRecorder
}

// MockIDynamoSlackBotDbMockRecorder is the mock recorder for MockIDynamoSlackBotDb.
type MockIDynamoSlackBotDbMockRecorder struct {
	mock *MockIDynamoSlackBotDb
}

// NewMockIDynamoSlackBotDb creates a new mock instance.
func NewMockIDynamoSlackBotDb(ctrl *gomock.Controller) *MockIDynamoSlackBotDb {
	mock := &MockIDynamoSlackBotDb{ctrl: ctrl}
	mock.recorder = &MockIDynamoSlackBotDbMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDynamoSlackBotDb) EXPECT() *MockIDynamoSlackBotDbMockRecorder {
	return m.recorder
}

// CreateRelease mocks base method.
func (m *MockIDynamoSlackBotDb) CreateRelease(model models.Request) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateRelease", model)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateRelease indicates an expected call of CreateRelease.
func (mr *MockIDynamoSlackBotDbMockRecorder) CreateRelease(model interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateRelease", reflect.TypeOf((*MockIDynamoSlackBotDb)(nil).CreateRelease), model)
}

